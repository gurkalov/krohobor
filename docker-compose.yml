version: "3.6"

services:
  app:
    image: ${IMAGE_APP}
    ports:
      - ${APP_PORT}:80
    entrypoint: ["/root/krohobor", "httpserver"]
    environment:
      APP_PORT: 80
      APP_PASSWORD: ${APP_PASSWORD}
      APP_CATALOG: ${APP_CATALOG}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      PGHOST: ${POSTGRES_HOST}
      PGPORT: ${POSTGRES_PORT}
      PGDB: ${POSTGRES_DB}
      PGUSER: ${POSTGRES_USER}
      PGPASSWORD: ${POSTGRES_PASSWORD}
    restart: on-failure
    links:
      - postgres-source

  postgres-source:
    image: ${IMAGE_POSTGRES}
    restart: always
    volumes:
      - krohobor-postgres-source:/var/lib/postgresql/data
      - ./database/postgres:/docker-entrypoint-initdb.d
    ports:
      - 5430:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  postgres-target:
    image: ${IMAGE_POSTGRES}
    restart: always
    volumes:
      - krohobor-postgres-target:/var/lib/postgresql/data
    ports:
      - 5431:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

#  cron:
#    image: ${IMAGE_CRON}
#    restart: always
#    environment:
#      CRON_STRINGS: "0 * * * * wget --post-data '' http://app/v1/backup"
#
#  ppa:
#    image: ${IMAGE_PPA}
#    restart: always
#    ports:
#      - 7051:80
#    environment:
#      PHP_PG_ADMIN_SERVER_HOST: postgres
#    links:
#      - postgres

volumes:
  krohobor-postgres-source:
  krohobor-postgres-target:
